ans,i,j,eE[1000000],Ee[1000000];longestSubarray(int* nums, int numsSize)
{if(numsSize==1)return 0;
    for(i=0;i<numsSize;++i)if(nums[i]==0)eE[i]=0;else
    {
        j=i;while(j+1<numsSize&&nums[j+1])++j;
        for(int I=i;I<=j;++I)eE[I]=j-I+1;
        i=j;
    }
    for(i=numsSize-1;~i;--i)if(nums[i]==0)Ee[i]=0;else
    {
        j=i;while(j&&nums[j-1])--j;
        for(int I=i;I>=j;--I)Ee[I]=I-j+1;
        i=j;
    }
    for(i=ans=0;i<numsSize;++i)
    if(ans<(i?Ee[i-1]:0)+(i+1<numsSize?eE[i+1]:0))
       ans=(i?Ee[i-1]:0)+(i+1<numsSize?eE[i+1]:0);
    return ans;
}
int findMaxConsecutiveOnes(int* nums, int numsSize)
{
    for(i=0;i<numsSize;++i)if(nums[i]==0)eE[i]=0;else
    {
        j=i;while(j+1<numsSize&&nums[j+1])++j;
        for(int I=i;I<=j;++I)eE[I]=j-I+1;
        i=j;
    }
    for(i=ans=0;i<numsSize;++i)if(ans<eE[i])ans=eE[i];
    return ans;
}
