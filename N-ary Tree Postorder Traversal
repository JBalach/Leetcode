/**
 * Definition for a Node.
 * struct Node {
 *     int val;
 *     int numChildren;
 *     struct Node** children;
 * };
 */

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
void tre(struct Node* root, int* res, int* returnSize);

int* postorder(struct Node* root, int* returnSize) {
    *returnSize = 0;
    int* res = calloc(10001, sizeof(int));
    if(!root){
        return res;
    }
    tre(root, res, returnSize);
    return res;
}

void tre(struct Node* root, int* res, int* returnSize){
    if(!root){
        return;
    }

    for(int i = 0; i < root->numChildren; i++){
        struct Node* t = root->children[i];
        tre(t, res, returnSize);
    }
    res[(*returnSize)++] = root->val;
}
