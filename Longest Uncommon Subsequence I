/*
 * 521. Longest Uncommon Subsequence I
 *
 * Given two strings a and b, return the length of the longest uncommon 
 * subsequence between a and b. If no such uncommon subsequence exists, return -1.
 * 
 * An uncommon subsequence between two strings is a string that is a subsequence
 * of exactly one of them.
 *
 * 1 <= a.length, b.length <= 100
 * a and b consist of lower-case English letters.
 */

int findLUSlength(char* a, char* b) {

    /*
     * Input:
     *  *a
     *  *b
     */
    
    int len1 = strlen(a), len2 = strlen(b);

    if (len1 == len2) {
        if (strcmp(a, b) == 0) {
            return -1;
        }
    }

    /*
     * Output:
     *  return the length of the longest uncommon subsequence between a and b. 
     *  If no such uncommon subsequence exists, return -1.
     */

    return (len1 > len2) ? len1 : len2;
}
